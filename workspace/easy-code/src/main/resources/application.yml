server:
  port: 8001

spring:
  messages:
    basename: i18n/Messages,i18n/Pages
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # MYSQL 5 驱动：com.mysql.jdbc.Driver，MYSQL 6+ 驱动：com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/mldn?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true
    username: root
    password: root123
    # 连接池配置
    druid:
      initial-size: 10                            # 初始化时建立物理连接个数
      min-idle: 10                                # 最小连接池数量
      max-active: 200                             # 最大连接池数量
      max-wait: 60000                             # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置
      time-between-eviction-runs-millis: 60000    # 关闭空闲连接的检测时间间隔.Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      min-evictable-idle-time-millis: 300000      # 连接的最小生存时间.连接保持空闲而不被驱逐的最小时间
      validation-query: SELECT 1 FROM DUAL        # 验证数据库服务可用性的sql.用来检测连接是否有效的sql 因数据库方言而差, 例如 oracle 应该写成 SELECT 1 FROM DUAL
      test-while-idle: true                       # 申请连接时检测空闲时间，根据空闲时间再检测连接是否有效.建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRun
      test-on-borrow: false                       # 申请连接时直接检测连接是否有效.申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false                       # 归还连接时检测连接是否有效.归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,log4j2
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connect-properties: druid.stat.mergeSql=true; druid.stat.slowSqlMillis=5000
      default-auto-commit: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20

  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 0
    timeout: 1000
    lettuce:
      pool:
        max-idle: 10
        min-idle: 10
        max-active: 20
        max-wait: 1000
#    jedis:
#      pool:
#        max-active: 10
#        max-idle: 8
#        min-idle: 2
#        max-wait: 100

mybatis:
  mapper-locations: classpath*:mybatis/mapper/**/*.xml      # 所有的mapper映射文件
  type-aliases-package: com.lz.easycode.dao                 # 定义所有操作类的别名所在包
  config-location: classpath:mybatis/mybatis-cfg.xml        # 定义 mybatis 配置文件

info:
  build:
    name: @project.name@
    artifact: @project.artifactId@
    description: @project.description@
    version: @project.version@

management:
  endpoints:
    web:
      exposure:
        include: "*"    # 开启所有端点
swagger:
  restApi:
    enable: true
    title: SpringBoot利用swagger构建api文档
    description: 简单优雅的restful风格
    version: 1.0
    contact:
      name: ninja
      url: www.baidu.com
      email: lzj_0518@163.com

mqtt:
  broker: tcp://39.107.78.52:61613 #tcp://192.168.121.14:1883
  username: spn #emqx_test
  password: spn.123 #emqx_test_password
  clientId: emqx_test
  subTopic: dev/# #testtopic/#